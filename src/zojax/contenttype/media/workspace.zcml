<configure
   xmlns="http://namespaces.zope.org/zope"
   xmlns:zojax="http://namespaces.zope.org/zojax"
   i18n_domain="zojax.contenttypes">

  <zojax:reservedNames
     names="media"
     for="zojax.content.space.interfaces.IContentSpace" />

  <zojax:reservedNames
     names="media"
     for="zojax.groups.interfaces.IGroup" />

  <!-- news workspace -->
  <zojax:content
     name="workspace.media"
     title="Media Workspace"
     class=".workspace.MediaWorkspace"
     schema=".interfaces.IMediaWorkspace"
     contains=".interfaces.IMediaType"
     type="zojax.content.type.interfaces.IInactiveType" />

  <class class=".workspace.MediaWorkspace">
    <implements interface="zojax.ownership.interfaces.IInheritOwnership" />
    <implements interface="zojax.content.type.interfaces.IRenameNotAllowed" />
    <implements interface="zojax.content.type.interfaces.ISearchableContent" />
    <implements interface="zojax.content.type.interfaces.IUnremoveableContent" />
    <implements interface="zojax.content.type.interfaces.IContainerContentsAware" />

    <require
       permission="zope.View"
       interface=".interfaces.IMediaWorkspace
       zojax.content.type.interfaces.IItem
       zope.app.container.interfaces.IReadContainer" />

    <require
       permission="zojax.ModifyContent"
       set_schema=".interfaces.IMediaWorkspace
       zojax.content.type.interfaces.IItem"
       interface="zope.app.container.interfaces.IWriteContainer" />
  </class>

  <!-- media workspace factory -->
  <adapter
     name="media"
     factory=".workspace.MediaWorkspaceFactory" />

  <adapter
     name="media"
     for="zojax.groups.interfaces.IGroup"
     provides="zojax.content.space.interfaces.IWorkspaceFactory"
     factory=".workspace.MediaWorkspaceFactory" />

  <adapter factory=".workspace.MediaSized" />

  <subscriber handler=".workspace.mediaWorkspaceAdded" />

</configure>
